<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="localCreateGroup" duration-ms="17681" started-at="2020-02-17T16:42:17Z" finished-at="2020-02-17T16:42:35Z">
    <groups>
      <group name="groupCreation">
        <method signature="AdminCreateGroupTest.testToCheckBlankRestrictionsInCreateGroup(resources.models.Group)[pri:3, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCheckBlankRestrictionsInCreateGroup" class="com.TheGoodGuys.DMS1.AdminCreateGroupTest"/>
        <method signature="AdminCreateGroupTest.testToCheckLengthRestrictionsInCreateGroup(resources.models.Group)[pri:2, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCheckLengthRestrictionsInCreateGroup" class="com.TheGoodGuys.DMS1.AdminCreateGroupTest"/>
        <method signature="AdminCreateGroupTest.testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" class="com.TheGoodGuys.DMS1.AdminCreateGroupTest"/>
      </group> <!-- groupCreation -->
    </groups>
    <test name="GroupCreationTest" duration-ms="17681" started-at="2020-02-17T16:42:17Z" finished-at="2020-02-17T16:42:35Z">
      <class name="com.TheGoodGuys.DMS1.AdminCreateGroupTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="setUp" is-config="true" duration-ms="1260" started-at="2020-02-17T16:42:17Z" finished-at="2020-02-17T16:42:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="preconditions(java.lang.String)[pri:0, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="preconditions" is-config="true" duration-ms="1093" started-at="2020-02-17T16:42:18Z" finished-at="2020-02-17T16:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://localhost:3000/#/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method status="PASS" signature="testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" duration-ms="2486" started-at="2020-02-17T16:42:20Z" data-provider="validGroups" finished-at="2020-02-17T16:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@1ef3efa8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCreateNewGroup -->
        <test-method status="FAIL" signature="testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" duration-ms="2795" started-at="2020-02-17T16:42:22Z" data-provider="validGroups" finished-at="2020-02-17T16:42:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@74e47444]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Group name could not be found in the group list]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Group name could not be found in the group list
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:26)
at com.TheGoodGuys.DMS1.AdminCreateGroupTest.testToCreateNewGroup(AdminCreateGroupTest.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCreateNewGroup -->
        <test-method status="PASS" signature="testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" duration-ms="2274" started-at="2020-02-17T16:42:25Z" data-provider="validGroups" finished-at="2020-02-17T16:42:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@1d9bec4d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCreateNewGroup -->
        <test-method status="PASS" signature="testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" duration-ms="2436" started-at="2020-02-17T16:42:27Z" data-provider="validGroups" finished-at="2020-02-17T16:42:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@9f46d94]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCreateNewGroup -->
        <test-method status="PASS" signature="testToCreateNewGroup(resources.models.Group)[pri:1, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCreateNewGroup" duration-ms="2317" started-at="2020-02-17T16:42:30Z" data-provider="validGroups" finished-at="2020-02-17T16:42:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@5d8445d7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCreateNewGroup -->
        <test-method status="PASS" signature="testToCheckLengthRestrictionsInCreateGroup(resources.models.Group)[pri:2, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCheckLengthRestrictionsInCreateGroup" duration-ms="725" started-at="2020-02-17T16:42:32Z" data-provider="groupsInvalidLength" finished-at="2020-02-17T16:42:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@36dce7ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCheckLengthRestrictionsInCreateGroup -->
        <test-method status="PASS" signature="testToCheckLengthRestrictionsInCreateGroup(resources.models.Group)[pri:2, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCheckLengthRestrictionsInCreateGroup" duration-ms="1047" started-at="2020-02-17T16:42:33Z" data-provider="groupsInvalidLength" finished-at="2020-02-17T16:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@71b1a49c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCheckLengthRestrictionsInCreateGroup -->
        <test-method status="PASS" signature="testToCheckBlankRestrictionsInCreateGroup(resources.models.Group)[pri:3, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="testToCheckBlankRestrictionsInCreateGroup" duration-ms="755" started-at="2020-02-17T16:42:34Z" data-provider="groupsBlankName" finished-at="2020-02-17T16:42:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources.models.Group@49d98dc5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToCheckBlankRestrictionsInCreateGroup -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.TheGoodGuys.DMS1.AdminCreateGroupTest@2aece37d]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2020-02-17T16:42:35Z" finished-at="2020-02-17T16:42:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.TheGoodGuys.DMS1.AdminCreateGroupTest -->
    </test> <!-- GroupCreationTest -->
  </suite> <!-- localCreateGroup -->
</testng-results>
